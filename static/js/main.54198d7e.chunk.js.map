{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","setTitle","amount","onClick","Expenses","items","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","Date","onSaveForm","type","value","onChange","target","min","step","max","class","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","App","expenses","formData","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54198d7e.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import {useState} from 'react';\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const handleClick = () => {\r\n    setTitle('Updated');\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n      <button onClick={handleClick}>test button</button>\r\n    </Card>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import Card from '../UI/Card';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseItem\r\n        title={props.items[0].title}\r\n        amount={props.items[0].amount}\r\n        date={props.items[0].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[1].title}\r\n        amount={props.items[1].amount}\r\n        date={props.items[1].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[2].title}\r\n        amount={props.items[2].amount}\r\n        date={props.items[2].date}\r\n      />\r\n      <ExpenseItem\r\n        title={props.items[3].title}\r\n        amount={props.items[3].amount}\r\n        date={props.items[3].date}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //Single state approach: Not a good way\r\n\r\n  //   const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: \"\",\r\n  //     enteredAmount: \"\",\r\n  //     enteredDate: \"\",\r\n  //   });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    //below method is not good, whenever you update your state and you depend on the previous state\r\n    //use alternate approach. (Method 2.)\r\n\r\n    //Method 1\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredTitle: event.target.value\r\n    // });\r\n\r\n    //Method 2\r\n    // setUserInput((prevState) => {\r\n    //     return {...prevState, enteredTitle: event.target.value}\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveForm(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-0101\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div class=\"new-expense__actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n    const expenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData, \r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveForm={expenseDataHandler}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n  const expenses = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    {\n      id: \"e2\",\n      title: \"New TV\",\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n    },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const addExpenseHandler = (formData) => {\n      const expenseData = formData;\n      console.log(expenseData);\n  }\n  return (\n    <div>\n        <NewExpense onAddExpense={addExpenseHandler}/>\n        <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
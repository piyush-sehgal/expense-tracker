{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","item","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","console","log","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveForm","type","min","step","max","class","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","Math","random","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","formData","prevEpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b789a3c.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onFilterChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n          <option value='2018'>2018</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((item) => (\r\n        <ExpenseItem\r\n          key={item.id}\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const dropdownChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((item) => {\r\n    console.log(item.date.getFullYear.toString() === filteredYear);\r\n    return item.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onFilterChange={dropdownChangeHandler}\r\n        />\r\n        <ExpensesList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //Single state approach: Not a good way\r\n\r\n  //   const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: \"\",\r\n  //     enteredAmount: \"\",\r\n  //     enteredDate: \"\",\r\n  //   });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    //below method is not good, whenever you update your state and you depend on the previous state\r\n    //use alternate approach. (Method 2.)\r\n\r\n    //Method 1\r\n    // setUserInput({\r\n    //     ...userInput,\r\n    //     enteredTitle: event.target.value\r\n    // });\r\n\r\n    //Method 2\r\n    // setUserInput((prevState) => {\r\n    //     return {...prevState, enteredTitle: event.target.value}\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();//used to override default submit behavior of the browser\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveForm(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-0101\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div class=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const expenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add new Expense</button>\r\n      )}\r\n      {isEditing && <ExpenseForm onSaveForm={expenseDataHandler} onCancel={stopEditingHandler}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Test 2020\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"Test 2019\",\n    amount: 799.49,\n    date: new Date(2019, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Test 2019 2\",\n    amount: 294.67,\n    date: new Date(2019, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"Test 2018\",\n    amount: 450,\n    date: new Date(2018, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (formData) => {\n    setExpenses((prevEpenses) => {\n      return [formData, ...prevEpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}